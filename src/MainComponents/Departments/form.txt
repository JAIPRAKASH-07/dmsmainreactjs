import axios from 'axios';
import React, { useEffect, useState } from 'react';

function DepartmentsForm() {
    const [departments, setDepartments] = useState([]); // Array to store department names
    const [employeeName, setEmployeeName] = useState('');
    const [employeePhone, setEmployeePhone] = useState('');
    const [selectedDepartment, setSelectedDepartment] = useState('');
    const [targets, setTargets] = useState('');
    const [isLoading, setIsLoading] = useState(false); // Flag to indicate data fetching state
    const [error, setError] = useState(null); // Holds any errors encountered during API calls
  
    useEffect(() => {
      const fetchData = async () => {
        setIsLoading(true);
        setError(null); // Clear any existing errors
  
        try {
          // Simulate fetching departments from an API (replace with your actual API call)
          const response = await axios.post('https://jsonplaceholder.typicode.com/users', departments); // Replace with your endpoint
          setDepartments(response.data); // Update departments state with fetched data
        } catch (error) {
          setError(error);
          console.error('Error fetching departments:', error);
        } finally {
          setIsLoading(false);
        }
      };
  
      fetchData();
    }, []); // Empty dependency array ensures data is fetched only once on component mount
  
    const handleDepartmentNameChange = (event) => {
      setDepartments([...departments, event.target.value]); // Add new department to the array
      setEmployeeName(''); // Clear employee name on department addition
    };
  
    const handleEmployeeNameChange = (event) => {
      setEmployeeName(event.target.value);
    };
  
    const handleEmployeePhoneChange = (event) => {
      setEmployeePhone(event.target.value);
    };
  
    const handleSelectedDepartmentChange = (event) => {
      setSelectedDepartment(event.target.value);
    };
  
    const handleTargetsChange = (event) => {
      setTargets(event.target.value);
    };
  
    const handleSubmit = async (event) => {
      event.preventDefault();
  
      // Validate form data (optional)
      if (!departments.length || !employeeName || !employeePhone || !selectedDepartment || !targets) {
        alert('Please fill in all required fields.');
        return;
      }
  
      setIsLoading(true);
      setError(null);
  
      try {
        // Simulate sending data to an API (replace with your actual API call)
        const response = await axios.post('https://your-api-endpoint/data', {
          departments,
          employeeName,
          employeePhone,
          selectedDepartment,
          targets,
        });
        console.log('Data submitted successfully:', response);
      } catch (error) {
        setError(error);
        console.error('Error submitting data:', error);
      } finally {
        setIsLoading(false);
      }
    };
  
  return (
    <form onSubmit={handleSubmit}>
      <div>
        <label>Department Name:</label>
        <input type="text" value={departments.length ? departments[departments.length - 1] : ''} onChange={handleDepartmentNameChange} placeholder="Ex: Dental Department" />
        <button type="button" onClick={handleDepartmentNameChange} disabled={isLoading}>Add</button>
      </div>


      <div>
        <label>Employee Name:</label>
        <input type="text" value={employeeName} onChange={handleEmployeeNameChange} placeholder="Ex: Mr. Ramesh" />

        <label>Employee Phone:</label>
        <input type="text" value={employeePhone} onChange={handleEmployeePhoneChange} placeholder="+91 XXXXXXXXX" />
      </div>

      <div>
        <label>Department:</label>
        {/* <select value={selectedDepartment} onChange={handleSelectedDepartmentChange}>
          <option value="">Select an option</option>
          {departments.map((department, index) => (
            <option key={index} value={department}>{department}</option>
          ))}
        </select> */}
      </div>

      <div>
        <label>Targets:</label>
        <input type="text" value={targets} onChange={handleTargetsChange} placeholder="Ex: 1" />
      </div>

      <button type="submit">Submit</button>
    </form>
  );
}

export default DepartmentsForm;